// Code generated by mockery v2.23.4. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/Chystik/gophermart/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// AccrualWebAPI is an autogenerated mock type for the AccrualWebAPI type
type AccrualWebAPI struct {
	mock.Mock
}

type AccrualWebAPI_Expecter struct {
	mock *mock.Mock
}

func (_m *AccrualWebAPI) EXPECT() *AccrualWebAPI_Expecter {
	return &AccrualWebAPI_Expecter{mock: &_m.Mock}
}

// GetOrder provides a mock function with given fields: _a0, _a1
func (_m *AccrualWebAPI) GetOrder(_a0 context.Context, _a1 models.Order) (models.Order, error) {
	ret := _m.Called(_a0, _a1)

	var r0 models.Order
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Order) (models.Order, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, models.Order) models.Order); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(models.Order)
	}

	if rf, ok := ret.Get(1).(func(context.Context, models.Order) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AccrualWebAPI_GetOrder_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOrder'
type AccrualWebAPI_GetOrder_Call struct {
	*mock.Call
}

// GetOrder is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 models.Order
func (_e *AccrualWebAPI_Expecter) GetOrder(_a0 interface{}, _a1 interface{}) *AccrualWebAPI_GetOrder_Call {
	return &AccrualWebAPI_GetOrder_Call{Call: _e.mock.On("GetOrder", _a0, _a1)}
}

func (_c *AccrualWebAPI_GetOrder_Call) Run(run func(_a0 context.Context, _a1 models.Order)) *AccrualWebAPI_GetOrder_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(models.Order))
	})
	return _c
}

func (_c *AccrualWebAPI_GetOrder_Call) Return(_a0 models.Order, _a1 error) *AccrualWebAPI_GetOrder_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AccrualWebAPI_GetOrder_Call) RunAndReturn(run func(context.Context, models.Order) (models.Order, error)) *AccrualWebAPI_GetOrder_Call {
	_c.Call.Return(run)
	return _c
}

// NewAccrualWebAPI creates a new instance of AccrualWebAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccrualWebAPI(t interface {
	mock.TestingT
	Cleanup(func())
}) *AccrualWebAPI {
	mock := &AccrualWebAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
